{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"post\"\n};\nconst _hoisted_2 = {\n  class: \"post__userInfo\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"post__usertext\"\n};\nconst _hoisted_5 = {\n  class: \"post__usertext__time\"\n};\nconst _hoisted_6 = {\n  class: \"post__buttons\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-pen\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = [_hoisted_7];\n\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-xmark\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_10 = [_hoisted_9];\nconst _hoisted_11 = {\n  class: \"post__content\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"post-editbox\"\n};\n\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"Modifier le post:\", -1\n/* HOISTED */\n);\n\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, \"Modifier\", -1\n/* HOISTED */\n);\n\nconst _hoisted_15 = {\n  key: 0,\n  class: \"post__imageContainer\"\n};\nconst _hoisted_16 = [\"src\"];\n\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"font-size\": \"2.1em\",\n    \"color\": \"white\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-regular fa-circle-xmark\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_18 = [_hoisted_17];\nconst _hoisted_19 = {\n  class: \"comments_box\"\n};\n\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"h5\", null, \"Commentaires:\", -1\n/* HOISTED */\n);\n\nconst _hoisted_21 = {\n  class: \"comments__container\"\n};\nconst _hoisted_22 = {\n  class: \"comment_form\"\n};\nconst _hoisted_23 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_postComment = _resolveComponent(\"postComment\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    class: \"userpic post__userPic\",\n    src: `${$props.post.user.profilePic}`,\n    alt: \"Utilisateur {{post.user.prenom}} {{post.user.nom}}\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, _toDisplayString($props.post.user.prenom) + \" \" + _toDisplayString($props.post.user.nom), 1\n  /* TEXT */\n  ), _createElementVNode(\"h5\", _hoisted_5, _toDisplayString($data.formattedTimestamp), 1\n  /* TEXT */\n  )]), _createElementVNode(\"div\", _hoisted_6, [$data.isUserPost ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"post__buttons__btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.onEditMode && $options.onEditMode(...args))\n  }, _hoisted_8)) : _createCommentVNode(\"v-if\", true), $data.isUserPost ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"post__buttons__btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.onDeletePost && _ctx.onDeletePost(...args))\n  }, _hoisted_10)) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"div\", _hoisted_11, [_createCommentVNode(\" EDIT MODE \"), $data.isEditMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_hoisted_13, _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.onEditPost && $options.onEditPost(...args), [\"prevent\"])),\n    enctype: \"multipart/form-data\"\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.postTextEdit = $event),\n    placeholder: \"Modifier le texte...\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.postTextEdit]]), _createElementVNode(\"input\", {\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.onUploadImage && $options.onUploadImage(...args)),\n    type: \"file\",\n    accept: \".jpg,.jpeg,.png\"\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_14], 32\n  /* HYDRATE_EVENTS */\n  )])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" CONTENU \"), _createElementVNode(\"div\", null, [_createElementVNode(\"p\", null, _toDisplayString($props.post.text), 1\n  /* TEXT */\n  ), $props.post.image !== '' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"img\", {\n    class: \"post__image\",\n    src: `http://localhost:8000/${$props.post.image}`,\n    alt: \"Image du post\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_16), $data.isUserPost && $props.post.text != '' ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.onDeletePostImage && $options.onDeletePostImage(...args))\n  }, _hoisted_18)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_19, [_hoisted_20, _createElementVNode(\"div\", _hoisted_21, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.post.comments, (comment, i) => {\n    return _openBlock(), _createBlock(_component_postComment, {\n      key: i,\n      comment: $props.post.comments[i]\n    }, null, 8\n    /* PROPS */\n    , [\"comment\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"img\", {\n    class: \"userpic comment_form__userPic\",\n    src: `${$props.post.user.profilePic}`,\n    alt: \"Utilisateur {{post.user.prenom}} {{post.user.nom}}\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_23), _createElementVNode(\"form\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.commentText = $event),\n    type: \"text\",\n    placeholder: \"Commenter la publication\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.commentText]]), _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.onAddComment && $options.onAddComment(...args), [\"prevent\"])),\n    class: \"btn\"\n  }, \" Commenter \")])])])])])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_hoisted_7","_hoisted_9","style","_hoisted_17","_createElementBlock","src","$props","user","profilePic","alt","_toDisplayString","prenom","nom","$data","onClick","$options","_ctx","_createCommentVNode","_hoisted_13","onSubmit","enctype","$event","placeholder","onChange","type","accept","_hoisted_14","text","image","_hoisted_20","_Fragment","_renderList","comments","comment","i","_createBlock","_component_postComment","key"],"sourceRoot":"","sources":["C:\\Users\\Wilfre\\Desktop\\OC P7\\front-end\\src\\components\\posts\\PostBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"post\">\r\n    <div class=\"post__userInfo\">\r\n      <img\r\n        class=\"userpic post__userPic\"\r\n        v-bind:src=\"`${post.user.profilePic}`\"\r\n        alt=\"Utilisateur {{post.user.prenom}} {{post.user.nom}}\"\r\n      />\r\n      <div class=\"post__usertext\">\r\n        <h3>{{ post.user.prenom }} {{ post.user.nom }}</h3>\r\n        <h5 class=\"post__usertext__time\">{{ formattedTimestamp }}</h5>\r\n      </div>\r\n      <div class=\"post__buttons\">\r\n        <button\r\n          class=\"post__buttons__btn\"\r\n          v-if=\"isUserPost\"\r\n          @click=\"onEditMode\"\r\n        >\r\n          <i class=\"fa-solid fa-pen\"></i>\r\n        </button>\r\n        <button\r\n          class=\"post__buttons__btn\"\r\n          v-if=\"isUserPost\"\r\n          @click=\"onDeletePost\"\r\n        >\r\n          <i class=\"fa-solid fa-xmark\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"post__content\">\r\n      <!-- EDIT MODE -->\r\n      <div class=\"post-editbox\" v-if=\"isEditMode\">\r\n        <h4>Modifier le post:</h4>\r\n        <form v-on:submit.prevent=\"onEditPost\" enctype=\"multipart/form-data\">\r\n          <textarea v-model=\"postTextEdit\" placeholder=\"Modifier le texte...\" />\r\n          <input @change=\"onUploadImage\" type=\"file\" accept=\".jpg,.jpeg,.png\" />\r\n          <button class=\"btn\">Modifier</button>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- CONTENU -->\r\n      <div>\r\n        <p>{{ post.text }}</p>\r\n        <div v-if=\"post.image !== ''\" class=\"post__imageContainer\">\r\n          <img\r\n            class=\"post__image\"\r\n            v-bind:src=\"`http://localhost:8000/${post.image}`\"\r\n            alt=\"Image du post\"\r\n          />\r\n          <button\r\n            @click=\"onDeletePostImage\"\r\n            v-if=\"isUserPost && post.text != ''\"\r\n          >\r\n            <span style=\"font-size: 2.1em; color: white\">\r\n              <i class=\"fa-regular fa-circle-xmark\"></i>\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <div class=\"comments_box\">\r\n          <h5>Commentaires:</h5>\r\n          <div class=\"comments__container\">\r\n            <postComment\r\n              v-for=\"(comment, i) in post.comments\"\r\n              :key=\"i\"\r\n              v-bind:comment=\"post.comments[i]\"\r\n            />\r\n          </div>\r\n          <div class=\"comment_form\">\r\n            <img\r\n              class=\"userpic comment_form__userPic\"\r\n              v-bind:src=\"`${post.user.profilePic}`\"\r\n              alt=\"Utilisateur {{post.user.prenom}} {{post.user.nom}}\"\r\n            />\r\n            <form>\r\n              <input\r\n                v-model=\"commentText\"\r\n                type=\"text\"\r\n                placeholder=\"Commenter la publication\"\r\n              />\r\n              <button @click.prevent=\"onAddComment\" class=\"btn\">\r\n                Commenter\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport config from \"../../axios-config\";\r\nimport postComment from \"@/components/posts/PostComment.vue\";\r\n\r\nexport default {\r\n  name: \"postBox\",\r\n  props: [\"post\", \"user\"],\r\n  components: {\r\n    postComment,\r\n  },\r\n  data() {\r\n    return {\r\n      formattedTimestamp: \"00/00/00 00:00\",\r\n      commentText: \"\", //TODO make sure it's not empty\r\n      isUserPost: false,\r\n      isEditMode: false,\r\n\r\n      //Post edit\r\n      postTextEdit: \"\",\r\n      postFileEdit: null,\r\n    };\r\n  },\r\n  methods: {\r\n    onUploadImage(e) {\r\n      this.postFileEdit = e.target.files[0];\r\n    },\r\n    onDeletePostImage() {\r\n      axios\r\n        .post(\r\n          \"http://localhost:8000/api/post/removepostimage\",\r\n          { id: this.post.id },\r\n          config\r\n        )\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            this.$emit(\"edit-post-values\", response.data);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    onEditPost() {\r\n      const formData = new FormData();\r\n      formData.append(\"id\", this.post.id);\r\n      formData.append(\"text\", this.postTextEdit);\r\n\r\n      if (this.postFileEdit != null) {\r\n        formData.append(\"image\", this.postFileEdit, this.postFileEdit.name);\r\n      }\r\n\r\n      axios\r\n        .put(\"http://localhost:8000/api/post/updatepost\", formData, config)\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            this.postTextEdit = \"\";\r\n            this.postFileEdit = null;\r\n            this.isEditMode = false;\r\n            this.$emit(\"edit-post-values\", response.data);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    onEditMode() {\r\n      this.postTextEdit = this.post.text;\r\n      this.isEditMode = !this.isEditMode;\r\n    },\r\n    onAddComment() {\r\n      const commentObj = {\r\n        id: this.post.id,\r\n        text: this.commentText,\r\n      };\r\n\r\n      axios\r\n        .post(\r\n          \"http://localhost:8000/api/post/createcomment\",\r\n          commentObj,\r\n          config\r\n        )\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            const commentInfo = {\r\n              postId: this.post.id,\r\n              comment: response.data,\r\n            };\r\n\r\n            this.commentText = \"\";\r\n            this.$emit(\"added-comment\", commentInfo);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n  },\r\n  created() {\r\n    this.isUserPost = this.post.userId == this.user.id;\r\n\r\n    if (this.post.timestamp != null && this.post.timestamp != \"\") {\r\n      const values = this.post.timestamp.split(\"T\");\r\n      const date = values[0].split(\"-\");\r\n      const time = values[1].split(\":\");\r\n      this.formattedTimestamp = `${date[2]}/${date[1]}/${date[0]} à ${time[0]}h${time[1]}`;\r\n    }\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}
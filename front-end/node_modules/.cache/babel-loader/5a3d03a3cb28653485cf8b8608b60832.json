{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"home\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Publications des autres membres\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  key: 0,\n  class: \"post_container\"\n};\nconst _hoisted_4 = {\n  class: \"newpost\"\n};\nconst _hoisted_5 = [\"src\"];\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, \"Publier\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = {\n  key: 1\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"No post\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = [_hoisted_8];\nexport function render(_ctx, _cache) {\n  const _component_postBox = _resolveComponent(\"postBox\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _ctx.posts.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [this.user.profilePic ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    class: \"newpost__userPic\",\n    src: `${this.user.profilePic}`,\n    alt: \"Utilisateur {{this.user.prenom}} {{this.user.nom}}\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => _ctx.onPublishPost && _ctx.onPublishPost(...args), [\"prevent\"])),\n    enctype: \"multipart/form-data\"\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.postForm.postText = $event),\n    placeholder: \"Nouvelle publication\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, _ctx.postForm.postText]]), _createElementVNode(\"input\", {\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.onUploadImage && _ctx.onUploadImage(...args)),\n    type: \"file\",\n    accept: \".jpg,.jpeg,.png\"\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_6], 32\n  /* HYDRATE_EVENTS */\n  )]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.posts, (post, i) => {\n    return _openBlock(), _createBlock(_component_postBox, {\n      key: i,\n      post: _ctx.posts[i]\n    }, null, 8\n    /* PROPS */\n    , [\"post\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _hoisted_9))]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;;;gCACNC,oBAAwC,IAAxC,EAAwC,IAAxC,EAAI,iCAAJ,EAAmC;AAAA;AAAnC;;;;EAC6BC,KAAK,EAAC;;;EAC5BA,KAAK,EAAC;;;;gCAaPD,oBAAoC,QAApC,EAAoC;EAA5BC,KAAK,EAAC;AAAsB,CAApC,EAAoB,SAApB,EAA2B;AAAA;AAA3B;;;;;;gCAMJD,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,EAAW;AAAA;AAAX;;oBAAAE;;;;uBAtBJC,oBAwBM,KAxBN,cAwBM,CAvBJC,UAuBI,EAtBOC,WAAMC,MAAN,GAAY,mBAAvBH,oBAkBM,KAlBN,cAkBM,CAjBJH,oBAeM,KAfN,cAeM,MAbSO,KAAKC,4BADlBL,oBAKE,KALF,EAKE;UAAA;IAHAF,KAAK,EAAC,kBAGN;IAFOQ,GAAG,UAAUF,IAAV,CAAeC,UAAU,EAEnC;IADAE,GAAG,EAAC;EACJ,CALF;;EAAA,kDAcI,EARJV,oBAOO,MAPP,EAOO;IAPIW,QAAM,wDAAUN,iDAAV,EAAuB,WAAvB,EAOV;IAPmCO,OAAO,EAAC;EAO3C,CAPP,mBACEZ,oBAGE,UAHF,EAGE;+DAFSK,cAASQ,WAAQC,OAE1B;IADAC,WAAW,EAAC;EACZ,CAHF;;EAAA,kBACWV,cAASQ,aAGpBb,oBAAsE,OAAtE,EAAsE;IAA9DgB,QAAM,yCAAEX,iDAAF,CAAwD;IAAvCY,IAAI,EAAC,MAAkC;IAA3BC,MAAM,EAAC;EAAoB,CAAtE;;EAAA,GACAC,WANF;;EAAA,CAQI,CAfN,CAiBI,qBADJhB,oBAAsEiB,SAAtE,EAAsE,IAAtE,EAAsEC,YAAzChB,UAAyC,EAApC,CAAjBiB,IAAiB,EAAXC,CAAW,KAAV;yBAAxBC,aAAsEC,kBAAtE,EAAsE;MAAjCC,GAAG,EAAEH,CAA4B;MAAlBD,IAAI,EAAEjB,WAAMkB,CAAN;IAAY,CAAtE;;IAAA;GAAsE,CAAtE;;EAAA,CACI,EAlBN,oBAmBApB,oBAEM,KAFN,EAEMwB,UAFN,EAEMC,UAFN,EAGI,CAxBN","names":["id","_createElementVNode","class","_hoisted_8","_createElementBlock","_hoisted_2","_ctx","length","user","profilePic","src","alt","onSubmit","enctype","postText","$event","placeholder","onChange","type","accept","_hoisted_6","_Fragment","_renderList","post","i","_createBlock","_component_postBox","key","_hoisted_7","_hoisted_9"],"sourceRoot":"","sources":["C:\\Users\\Wilfre\\Desktop\\OC P7\\front-end\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div id=\"home\">\n    <h2>Publications des autres membres</h2>\n    <div v-if=\"posts.length > 0\" class=\"post_container\">\n      <div class=\"newpost\">\n        <img\n          v-if=\"this.user.profilePic\"\n          class=\"newpost__userPic\"\n          v-bind:src=\"`${this.user.profilePic}`\"\n          alt=\"Utilisateur {{this.user.prenom}} {{this.user.nom}}\"\n        />\n        <form v-on:submit.prevent=\"onPublishPost\" enctype=\"multipart/form-data\">\n          <textarea\n            v-model=\"postForm.postText\"\n            placeholder=\"Nouvelle publication\"\n          />\n          <input @change=\"onUploadImage\" type=\"file\" accept=\".jpg,.jpeg,.png\" />\n          <button class=\"btn\">Publier</button>\n        </form>\n      </div>\n      <postBox v-for=\"(post, i) in posts\" :key=\"i\" v-bind:post=\"posts[i]\" />\n    </div>\n    <div v-else>\n      <h1>No post</h1>\n    </div>\n  </div>\n</template>\n\n<script>\nimport postBox from \"@/components/posts/PostBox.vue\";\nimport axios from \"axios\";\nimport config from \"../axios-config\";\n\nexport default {\n  name: \"HomeView\",\n  props: [\"user\"],\n  components: {\n    postBox,\n  },\n  data() {\n    return {\n      posts: [],\n      postForm: [\n        \"postText\": \"\",\n        \"postFile\": {},\n      ],\n    };\n  },\n  methods: {\n    onUploadImage(e) {\n      this.postForm.postFile = e.target.files[0];\n    },\n    onPublishPost() {\n      axios\n        .post(\"http://localhost:8000/api/post/createpost\", this.postForm)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((err) => console.log(err));\n    },\n  },\n  created() {\n    //Vérification d'une connection existante avec le serveur\n    axios\n      .get(\"http://localhost:8000/api/auth/isloggedin\", config)\n      .then((response) => {\n        if (response.data.message == 0) {\n          //Déconnecté, redirection\n          this.$router.push(\"auth\");\n        }\n      });\n\n    //Obtention des posts\n    axios\n      .get(\"http://localhost:8000/api/post/getallposts\", config)\n      .then((response) => {\n        this.posts = response.data;\n      });\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}
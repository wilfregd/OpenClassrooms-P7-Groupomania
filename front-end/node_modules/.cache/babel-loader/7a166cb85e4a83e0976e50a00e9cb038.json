{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"comment\"\n};\nconst _hoisted_2 = {\n  class: \"comment__user\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"comment__userinfo\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"comment__buttons\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-pen\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = [_hoisted_6];\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fa-solid fa-xmark\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = {\n  class: \"comment__content\"\n};\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.comment ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    class: \"userpic comment__image\",\n    src: `${$props.comment.user.profilePic}`,\n    alt: \"Utilisateur {{comment.user.prenom}} {{comment.user.nom}}\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h4\", null, _toDisplayString($props.comment.user.prenom) + \" \" + _toDisplayString($props.comment.user.nom), 1\n  /* TEXT */\n  ), _createElementVNode(\"h6\", null, _toDisplayString($data.formattedTimestamp), 1\n  /* TEXT */\n  )]), $data.isUserComment ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    class: \"post__buttons__btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.onEditMode && $options.onEditMode(...args))\n  }, _hoisted_7), _createElementVNode(\"button\", {\n    class: \"post__buttons__btn\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.onDeleteComment && $options.onDeleteComment(...args))\n  }, _hoisted_9)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_10, [!$data.isEditMode ? (_openBlock(), _createElementBlock(\"p\", _hoisted_11, _toDisplayString($props.comment.text), 1\n  /* TEXT */\n  )) : (_openBlock(), _createElementBlock(\"form\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Modifier le commentaire...\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.commentText = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.commentText]]), _createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.onUpdateComment && $options.onUpdateComment(...args), [\"prevent\"]))\n  }, \"Modifier\")]))])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;EACsBA,KAAK,EAAC;;;EACnBA,KAAK,EAAC;;;;EAMJA,KAAK,EAAC;;;;EAIeA,KAAK,EAAC;;;gCAE5BC,oBAA+B,GAA/B,EAA+B;EAA5BD,KAAK,EAAC;AAAsB,CAA/B,EAA0B,IAA1B,EAA0B;AAAA;AAA1B;;oBAAAE;;gCAGAD,oBAAiC,GAAjC,EAAiC;EAA9BD,KAAK,EAAC;AAAwB,CAAjC,EAA4B,IAA5B,EAA4B;AAAA;AAA5B;;oBAAAG;;EAIDH,KAAK,EAAC;;;;;;;;;SApBFI,gCAAXC,oBA+BM,KA/BN,cA+BM,CA9BJJ,oBAkBM,KAlBN,cAkBM,CAjBJA,oBAIE,KAJF,EAIE;IAHAD,KAAK,EAAC,wBAGN;IAFOM,GAAG,KAAKF,eAAQG,IAAR,CAAaC,UAAU,EAEtC;IADAC,GAAG,EAAC;EACJ,CAJF;;EAAA,aAiBI,EAZJR,oBAGM,KAHN,cAGM,CAFJA,oBAAyD,IAAzD,EAAyD,IAAzD,EAAyDS,iBAAlDN,eAAQG,IAAR,CAAaI,MAAqC,IAA5B,GAA4B,GAA3BD,iBAAGN,eAAQG,IAAR,CAAaK,GAAhB,CAA9B,EAAiD;EAAA;EAAjD,CAEI,EADJX,oBAAiC,IAAjC,EAAiC,IAAjC,EAAiCS,iBAA1BG,wBAA0B,CAAjC,EAAyB;EAAA;EAAzB,CACI,CAHN,CAYI,EAROA,qCAAXR,oBAOM,KAPN,cAOM,CANJJ,oBAES,QAFT,EAES;IAFDD,KAAK,EAAC,oBAEL;IAF2Bc,OAAK,yCAAEC,mDAAF;EAEhC,CAFT,aAMI,EAHJd,oBAES,QAFT,EAES;IAFDD,KAAK,EAAC,oBAEL;IAF2Bc,OAAK,yCAAEC,6DAAF;EAEhC,CAFT,aAGI,CAPN,sCAQI,CAlBN,CA8BI,EAXJd,oBAUM,KAVN,eAUM,EATMY,kCAAVR,oBAA4C,GAA5C,EAA4CW,WAA5C,EAA4CN,iBAAnBN,eAAQa,IAAW,CAA5C,EAAqC;EAAA;EAArC,oBACAZ,oBAOO,MAPP,EAOOa,WAPP,EAOO,iBANLjB,oBAIE,OAJF,EAIE;IAHAkB,IAAI,EAAC,MAGL;IAFAC,WAAW,EAAC,4BAEZ;+DADSP,oBAAWQ;EACpB,CAJF;;EAAA,kBAGWR,oBAGN,EADLZ,oBAAsE,QAAtE,EAAsE;IAA9DD,KAAK,EAAC,KAAwD;IAAjDc,OAAK,wDAAUC,6DAAV,EAAyB,WAAzB;EAA4C,CAAtE,EAAqD,UAArD,CACK,CAPP,EAQI,CAVN,CAWI,CA/BN","names":["class","_createElementVNode","_hoisted_6","_hoisted_8","$props","_createElementBlock","src","user","profilePic","alt","_toDisplayString","prenom","nom","$data","onClick","$options","_hoisted_11","text","_hoisted_12","type","placeholder","$event"],"sourceRoot":"","sources":["C:\\Users\\Wilfre\\Desktop\\OC P7\\front-end\\src\\components\\posts\\PostComment.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"comment\" class=\"comment\">\r\n    <div class=\"comment__user\">\r\n      <img\r\n        class=\"userpic comment__image\"\r\n        v-bind:src=\"`${comment.user.profilePic}`\"\r\n        alt=\"Utilisateur {{comment.user.prenom}} {{comment.user.nom}}\"\r\n      />\r\n      <div class=\"comment__userinfo\">\r\n        <h4>{{ comment.user.prenom }} {{ comment.user.nom }}</h4>\r\n        <h6>{{ formattedTimestamp }}</h6>\r\n      </div>\r\n      <div v-if=\"isUserComment\" class=\"comment__buttons\">\r\n        <button class=\"post__buttons__btn\" @click=\"onEditMode\">\r\n          <i class=\"fa-solid fa-pen\"></i>\r\n        </button>\r\n        <button class=\"post__buttons__btn\" @click=\"onDeleteComment\">\r\n          <i class=\"fa-solid fa-xmark\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"comment__content\">\r\n      <p v-if=\"!isEditMode\">{{ comment.text }}</p>\r\n      <form v-else>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Modifier le commentaire...\"\r\n          v-model=\"commentText\"\r\n        />\r\n        <button class=\"btn\" @click.prevent=\"onUpdateComment\">Modifier</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"postComment\",\r\n  props: [\"comment\", \"user\"],\r\n  data() {\r\n    return {\r\n      formattedTimestamp: \"00/00/00 à 00:00\",\r\n      isUserComment: false,\r\n      isEditMode: false,\r\n      commentText: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    onEditMode() {\r\n      this.commentText = this.comment.text;\r\n      this.isEditMode = !this.isEditMode;\r\n    },\r\n    onDeleteComment() {\r\n      this.$emit(\"delete-comment\", this.comment.id);\r\n    },\r\n    onUpdateComment() {\r\n      const data = {\r\n        id: this.comment.id,\r\n        text: this.commentText,\r\n      };\r\n      this.isEditMode = false;\r\n      this.commentText = \"\";\r\n      this.$emit(\"update-comment\", data);\r\n    },\r\n  },\r\n  created() {\r\n    this.isUserComment =\r\n      this.user.id == this.comment.userId || this.user.isAdmin;\r\n    this.commentText = this.comment.text;\r\n\r\n    if (this.comment.timestamp != null && this.comment.timestamp != \"\") {\r\n      const values = this.comment.timestamp.split(\"T\");\r\n      const date = values[0].split(\"-\");\r\n      const time = values[1].split(\":\");\r\n      this.formattedTimestamp = `${date[2]}/${date[1]}/${date[0]} à ${time[0]}h${time[1]}`;\r\n    }\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import postBox from \"@/components/posts/PostBox.vue\";\nimport axios from \"axios\";\nimport config from \"../axios-config\";\nexport default {\n  name: \"HomeView\",\n  props: [\"user\"],\n  components: {\n    postBox\n  },\n\n  data() {\n    return {\n      posts: [],\n      postFormText: \"\",\n      postFormImage: {}\n    };\n  },\n\n  methods: {\n    onUploadImage(e) {\n      this.postFormImage = e.target.files;\n      console.log(e.target.files);\n    },\n\n    onPublishPost() {\n      console.log(this.postFormImage);\n    }\n\n  },\n\n  created() {\n    //Vérification d'une connection existante avec le serveur\n    axios.get(\"http://localhost:8000/api/auth/isloggedin\", config).then(response => {\n      if (response.data.message == 0) {\n        //Déconnecté, redirection\n        this.$router.push(\"auth\");\n      }\n    }); //Obtention des posts\n\n    axios.get(\"http://localhost:8000/api/post/getallposts\", config).then(response => {\n      this.posts = response.data;\n    });\n  }\n\n};","map":{"version":3,"mappings":"AA0BA,OAAOA,OAAP,MAAoB,gCAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,eAAe;EACbC,IAAI,EAAE,UADO;EAEbC,KAAK,EAAE,CAAC,MAAD,CAFM;EAGbC,UAAU,EAAE;IACVL;EADU,CAHC;;EAMbM,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE,EADF;MAELC,YAAY,EAAE,EAFT;MAGLC,aAAa,EAAE;IAHV,CAAP;EAKD,CAZY;;EAabC,OAAO,EAAE;IACPC,aAAa,CAACC,CAAD,EAAI;MACf,KAAKH,aAAL,GAAqBG,CAAC,CAACC,MAAF,CAASC,KAA9B;MACAC,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,KAArB;IACD,CAJM;;IAKPG,aAAa,GAAG;MACdF,OAAO,CAACC,GAAR,CAAY,KAAKP,aAAjB;IACD;;EAPM,CAbI;;EAsBbS,OAAO,GAAG;IACR;IACAjB,KAAI,CACDkB,GADH,CACO,2CADP,EACoDjB,MADpD,EAEGkB,IAFH,CAESC,QAAD,IAAc;MAClB,IAAIA,QAAQ,CAACf,IAAT,CAAcgB,OAAd,IAAyB,CAA7B,EAAgC;QAC9B;QACA,KAAKC,OAAL,CAAaC,IAAb,CAAkB,MAAlB;MACF;IACD,CAPH,EAFQ,CAWR;;IACAvB,KAAI,CACDkB,GADH,CACO,4CADP,EACqDjB,MADrD,EAEGkB,IAFH,CAESC,QAAD,IAAc;MAClB,KAAKd,KAAL,GAAac,QAAQ,CAACf,IAAtB;IACD,CAJH;EAKD;;AAvCY,CAAf","names":["postBox","axios","config","name","props","components","data","posts","postFormText","postFormImage","methods","onUploadImage","e","target","files","console","log","onPublishPost","created","get","then","response","message","$router","push"],"sourceRoot":"","sources":["C:\\Users\\Wilfre\\Desktop\\OC P7\\front-end\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div id=\"home\">\n    <h2>Publications des autres membres</h2>\n    <div v-if=\"posts.length > 0\" class=\"post_container\">\n      <div class=\"newpost\">\n        <img\n          v-if=\"this.user.profilePic\"\n          class=\"newpost__userPic\"\n          v-bind:src=\"`${this.user.profilePic}`\"\n          alt=\"Utilisateur {{this.user.prenom}} {{this.user.nom}}\"\n        />\n        <form enctype=\"multipart/form-data\">\n          <textarea v-model=\"postFormText\" placeholder=\"Nouvelle publication\" />\n          <input v-on:onUploadImage=\"e\" type=\"file\" accept=\".jpg,.jpeg,.png\" />\n          <button @click.prevent=\"onPublishPost\" class=\"btn\">Publier</button>\n        </form>\n      </div>\n      <postBox v-for=\"(post, i) in posts\" :key=\"i\" v-bind:post=\"posts[i]\" />\n    </div>\n    <div v-else>\n      <h1>No post</h1>\n    </div>\n  </div>\n</template>\n\n<script>\nimport postBox from \"@/components/posts/PostBox.vue\";\nimport axios from \"axios\";\nimport config from \"../axios-config\";\n\nexport default {\n  name: \"HomeView\",\n  props: [\"user\"],\n  components: {\n    postBox,\n  },\n  data() {\n    return {\n      posts: [],\n      postFormText: \"\",\n      postFormImage: {},\n    };\n  },\n  methods: {\n    onUploadImage(e) {\n      this.postFormImage = e.target.files;\n      console.log(e.target.files);\n    },\n    onPublishPost() {\n      console.log(this.postFormImage);\n    },\n  },\n  created() {\n    //Vérification d'une connection existante avec le serveur\n    axios\n      .get(\"http://localhost:8000/api/auth/isloggedin\", config)\n      .then((response) => {\n        if (response.data.message == 0) {\n          //Déconnecté, redirection\n          this.$router.push(\"auth\");\n        }\n      });\n\n    //Obtention des posts\n    axios\n      .get(\"http://localhost:8000/api/post/getallposts\", config)\n      .then((response) => {\n        this.posts = response.data;\n      });\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-content\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"user-infobox\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"user-infobox__infos\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"post_container\"\n};\nconst _hoisted_6 = {\n  key: 2,\n  class: \"post_container\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"This user does not exist\", -1\n/* HOISTED */\n);\n\nconst _hoisted_8 = [_hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_postBox = _resolveComponent(\"postBox\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.pageUser && !$data.isNotFound ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\"IMAGE\"), _createElementVNode(\"img\", {\n    src: `${$data.pageUser.profilePic}`,\n    alt: \"Utilisateur {{pageUser.prenom}} {{pageUser.nom}}\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h3\", null, _toDisplayString($data.pageUser.prenom) + \" \" + _toDisplayString($data.pageUser.nom), 1\n  /* TEXT */\n  ), _createElementVNode(\"h4\", null, \"A propos de \" + _toDisplayString($data.pageUser.prenom) + \":\", 1\n  /* TEXT */\n  ), _createElementVNode(\"p\", null, _toDisplayString($data.pageUser.description), 1\n  /* TEXT */\n  )]), _createCommentVNode(\"INFO COLUMN\")])) : _createCommentVNode(\"v-if\", true), $data.pageUser && !$data.isNotFound ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"h3\", null, \"Publications de \" + _toDisplayString($data.pageUser.prenom) + \" \" + _toDisplayString($data.pageUser.nom), 1\n  /* TEXT */\n  ), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, (post, i) => {\n    return _openBlock(), _createBlock(_component_postBox, {\n      key: i,\n      post: $data.posts[i],\n      user: $data.pageUser\n    }, null, 8\n    /* PROPS */\n    , [\"post\", \"user\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])) : _createCommentVNode(\"v-if\", true), $data.isNotFound ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _hoisted_8)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;;;;EAC2BA,KAAK,EAAC;;;;EAMnCA,KAAK,EAAC;;;;EAOuBA,KAAK,EAAC;;;;EASnBA,KAAK,EAAC;;;gCAC3BC,oBAAiC,IAAjC,EAAiC,IAAjC,EAAI,0BAAJ,EAA4B;AAAA;AAA5B;;oBAAAC;;;;uBAxBJC,oBA0BM,KA1BN,cA0BM,CAzBOC,kBAAQ,CAAKA,kCAAxBD,oBAYM,KAZN,cAYM,CAXJE,4BAWI,EAVJJ,oBAGE,KAHF,EAGE;IAFOK,GAAG,KAAKF,eAASG,UAAU,EAElC;IADAC,GAAG,EAAC;EACJ,CAHF;;EAAA,aAUI,EANJP,oBAIM,KAJN,cAIM,CAHJA,oBAAiD,IAAjD,EAAiD,IAAjD,EAAiDQ,iBAA1CL,eAASM,MAAiC,IAAxB,GAAwB,GAAvBD,iBAAGL,eAASO,GAAZ,CAA1B,EAAyC;EAAA;EAAzC,CAGI,EAFJV,oBAA2C,IAA3C,EAA2C,IAA3C,EAAI,iBAAYQ,iBAAGL,eAASM,MAAZ,CAAZ,GAAiC,GAArC,EAAsC;EAAA;EAAtC,CAEI,EADJT,oBAAiC,GAAjC,EAAiC,IAAjC,EAAiCQ,iBAA3BL,eAASQ,WAAkB,CAAjC,EAA0B;EAAA;EAA1B,CACI,CAJN,CAMI,EADJP,kCACI,CAZN,sCAyBI,EAZOD,kBAAQ,CAAKA,kCAAxBD,oBAQM,KARN,cAQM,CAPJF,oBAAiE,IAAjE,EAAiE,IAAjE,EAAI,qBAAgBQ,iBAAGL,eAASM,MAAZ,CAAhB,GAAqC,GAArC,GAAsCD,iBAAGL,eAASO,GAAZ,CAA1C,EAAyD;EAAA;EAAzD,CAOI,qBANJR,oBAKEU,SALF,EAKE,IALF,EAKEC,YAJoBV,WAIpB,EAJyB,CAAjBW,IAAiB,EAAXC,CAAW,KAAV;yBADjBC,aAKEC,kBALF,EAKE;MAHCC,GAAG,EAAEH,CAGN;MAFOD,IAAI,EAAEX,YAAMY,CAAN,CAEb;MADOI,IAAI,EAAEhB;IACb,CALF;;IAAA;GAKE,CALF;;EAAA,CAMI,EARN,sCAYI,EAHOA,kCAAXD,oBAEM,KAFN,cAEMkB,UAFN,sCAGI,CA1BN","names":["class","_createElementVNode","_hoisted_7","_createElementBlock","$data","_createCommentVNode","src","profilePic","alt","_toDisplayString","prenom","nom","description","_Fragment","_renderList","post","i","_createBlock","_component_postBox","key","user","_hoisted_8"],"sourceRoot":"","sources":["C:\\Users\\Wilfre\\Desktop\\OC P7\\front-end\\src\\views\\UserView.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-content\">\r\n    <div v-if=\"pageUser && !isNotFound\" class=\"user-infobox\">\r\n      <!--IMAGE-->\r\n      <img\r\n        v-bind:src=\"`${pageUser.profilePic}`\"\r\n        alt=\"Utilisateur {{pageUser.prenom}} {{pageUser.nom}}\"\r\n      />\r\n      <div class=\"user-infobox__infos\">\r\n        <h3>{{ pageUser.prenom }} {{ pageUser.nom }}</h3>\r\n        <h4>A propos de {{ pageUser.prenom }}:</h4>\r\n        <p>{{ pageUser.description }}</p>\r\n      </div>\r\n      <!--INFO COLUMN-->\r\n    </div>\r\n    <div v-if=\"pageUser && !isNotFound\" class=\"post_container\" v-cloak>\r\n      <h3>Publications de {{ pageUser.prenom }} {{ pageUser.nom }}</h3>\r\n      <postBox\r\n        v-for=\"(post, i) in posts\"\r\n        :key=\"i\"\r\n        v-bind:post=\"posts[i]\"\r\n        v-bind:user=\"pageUser\"\r\n      />\r\n    </div>\r\n    <div v-if=\"isNotFound\" class=\"post_container\">\r\n      <h1>This user does not exist</h1>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport postBox from \"@/components/posts/PostBox.vue\";\r\nimport axios from \"axios\";\r\nimport config from \"../axios-config\";\r\n\r\nexport default {\r\n  name: \"UserView\",\r\n  props: [\"user\"],\r\n  emits: [\"update-user\"],\r\n  components: {\r\n    postBox,\r\n  },\r\n  data() {\r\n    return {\r\n      pageUser: null,\r\n      posts: [],\r\n      isNotFound: false,\r\n      userId: -1,\r\n    };\r\n  },\r\n  beforeCreate() {\r\n    //Obtention de l'utilisateur demandÃ©\r\n    this.userId = this.$route.params.id;\r\n    axios\r\n      .get(\"http://localhost:8000/api/user/\" + this.userId, config)\r\n      .then((response) => {\r\n        if (response.status == 200) {\r\n          this.pageUser = JSON.parse(response.data);\r\n\r\n          //Obtention des posts\r\n          axios\r\n            .get(\r\n              \"http://localhost:8000/api/post/getallposts/\" + this.userId,\r\n              config\r\n            )\r\n            .then((response) => {\r\n              this.isNotFound = false;\r\n              const posts = response.data;\r\n\r\n              if (posts) {\r\n                this.posts = posts.reverse();\r\n              } else {\r\n                this.noPost = true;\r\n              }\r\n            });\r\n        } else {\r\n          this.isNotFound = true;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.isNotFound = true;\r\n        console.log(err);\r\n      });\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}
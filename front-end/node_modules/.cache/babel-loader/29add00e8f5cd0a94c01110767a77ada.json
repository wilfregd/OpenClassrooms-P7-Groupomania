{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../../axios-config\";\nimport postComment from \"@/components/posts/PostComment.vue\";\nexport default {\n  name: \"postBox\",\n  props: [\"post\", \"user\"],\n  components: {\n    postComment\n  },\n\n  data() {\n    return {\n      formattedTimestamp: \"00/00/00 00:00\",\n      commentText: \"\",\n      //TODO make sure it's not empty\n      isUserPost: false,\n      isEditMode: false,\n      comments: [],\n      //Post edit\n      postTextEdit: \"\",\n      postFileEdit: null\n    };\n  },\n\n  methods: {\n    onUpdateComment(data) {\n      const commentData = {\n        id: data.id,\n        text: data.text\n      };\n      axios.put(\"http://localhost:8000/api/post/updatecomment/\", commentData, config).then(response => {\n        if (response.status == 200) {\n          const selComment = this.comments.find(comment => comment.id == data.id);\n          selComment.text = data.text;\n        }\n      }).catch(err => console.log(err));\n    },\n\n    onDeleteComment(commentId) {\n      axios.delete(\"http://localhost:8000/api/post/deletecomment/\" + commentId, config).then(response => {\n        if (response.status == 200) {\n          console.log(\"Deleted comment\");\n          const selComment = this.comments.find(comment => comment.id == commentId);\n          this.comments.splice(this.comments.indexOf(selComment), 1);\n        }\n      }).catch(err => console.log(err));\n    },\n\n    onUploadImage(e) {\n      this.postFileEdit = e.target.files[0];\n    },\n\n    onDeletePost() {\n      this.$emit(\"delete-post\", this.post.id);\n    },\n\n    onDeletePostImage() {\n      axios.post(\"http://localhost:8000/api/post/removepostimage\", {\n        id: this.post.id\n      }, config).then(response => {\n        if (response.status == 200) {\n          this.$emit(\"edit-post-values\", response.data);\n        }\n      }).catch(err => console.log(err));\n    },\n\n    onEditPost() {\n      const formData = new FormData();\n      formData.append(\"id\", this.post.id);\n      formData.append(\"text\", this.postTextEdit);\n\n      if (this.postFileEdit != null) {\n        formData.append(\"image\", this.postFileEdit, this.postFileEdit.name);\n      }\n\n      axios.put(\"http://localhost:8000/api/post/updatepost\", formData, config).then(response => {\n        if (response.status == 200) {\n          this.postTextEdit = \"\";\n          this.postFileEdit = null;\n          this.isEditMode = false;\n          this.$emit(\"edit-post-values\", response.data);\n        }\n      }).catch(err => console.log(err));\n    },\n\n    onEditMode() {\n      this.postTextEdit = this.post.text;\n      this.isEditMode = !this.isEditMode;\n    },\n\n    onAddComment() {\n      const commentObj = {\n        id: this.post.id,\n        text: this.commentText\n      };\n      axios.post(\"http://localhost:8000/api/post/createcomment\", commentObj, config).then(response => {\n        if (response.status == 201) {\n          const commentInfo = {\n            postId: this.post.id,\n            comment: response.data\n          };\n          this.commentText = \"\";\n          this.$emit(\"added-comment\", commentInfo);\n        }\n      }).catch(err => console.log(err));\n    }\n\n  },\n\n  created() {\n    console.log(this.post);\n    this.comments = this.post.comments;\n    this.isUserPost = this.post.userId == this.user.id || this.user.isAdmin;\n\n    if (this.post.timestamp != null && this.post.timestamp != \"\") {\n      const values = this.post.timestamp.split(\"T\");\n      const date = values[0].split(\"-\");\n      const time = values[1].split(\":\");\n      this.formattedTimestamp = `${date[2]}/${date[1]}/${date[0]} Ã  ${time[0]}h${time[1]}`;\n    }\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","config","postComment","name","props","components","data","formattedTimestamp","commentText","isUserPost","isEditMode","comments","postTextEdit","postFileEdit","methods","onUpdateComment","commentData","id","text","put","then","response","status","selComment","find","comment","catch","err","console","log","onDeleteComment","commentId","delete","splice","indexOf","onUploadImage","e","target","files","onDeletePost","$emit","post","onDeletePostImage","onEditPost","formData","FormData","append","onEditMode","onAddComment","commentObj","commentInfo","postId","created","userId","user","isAdmin","timestamp","values","split","date","time"],"sourceRoot":"","sources":["C:\\Users\\Wilfre\\Desktop\\OC P7\\front-end\\src\\components\\posts\\PostBox.vue"],"sourcesContent":["<template>\r\n  <div class=\"post\">\r\n    <div class=\"post__userInfo\">\r\n      <router-link :to=\"{ name: 'user', params: { id: `${post.userId}` } }\">\r\n        <img\r\n          class=\"userpic post__userPic\"\r\n          v-bind:src=\"`${post.user.profilePic}`\"\r\n          alt=\"Utilisateur {{post.user.prenom}} {{post.user.nom}}\"\r\n        />\r\n      </router-link>\r\n      <div class=\"post__usertext\">\r\n        <h3>{{ post.user.prenom }} {{ post.user.nom }}</h3>\r\n        <h5 class=\"post__usertext__time\">{{ formattedTimestamp }}</h5>\r\n      </div>\r\n      <div v-if=\"isUserPost\" class=\"post__buttons\">\r\n        <button class=\"post__buttons__btn\" @click=\"onEditMode\">\r\n          <i class=\"fa-solid fa-pen\"></i>\r\n        </button>\r\n        <button class=\"post__buttons__btn\" @click=\"onDeletePost\">\r\n          <i class=\"fa-solid fa-xmark\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"post__content\">\r\n      <!-- EDIT MODE -->\r\n      <div class=\"post-editbox\" v-if=\"isEditMode\">\r\n        <h4>Modifier le post:</h4>\r\n        <form v-on:submit.prevent=\"onEditPost\" enctype=\"multipart/form-data\">\r\n          <textarea v-model=\"postTextEdit\" placeholder=\"Modifier le texte...\" />\r\n          <input @change=\"onUploadImage\" type=\"file\" accept=\".jpg,.jpeg,.png\" />\r\n          <button class=\"btn\">Modifier</button>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- CONTENU -->\r\n      <div>\r\n        <p>{{ post.text }}</p>\r\n        <div v-if=\"post.image !== ''\" class=\"post__imageContainer\">\r\n          <img\r\n            class=\"post__image\"\r\n            v-bind:src=\"`http://localhost:8000/${post.image}`\"\r\n            alt=\"Image du post\"\r\n          />\r\n          <button\r\n            @click=\"onDeletePostImage\"\r\n            v-if=\"isUserPost && post.text != ''\"\r\n          >\r\n            <span style=\"font-size: 2.1em; color: white\">\r\n              <i class=\"fa-regular fa-circle-xmark\"></i>\r\n            </span>\r\n          </button>\r\n        </div>\r\n        <div class=\"comments_box\">\r\n          <h5>Commentaires:</h5>\r\n          <div class=\"comments__container\">\r\n            <postComment\r\n              v-for=\"(comment, i) in post.comments\"\r\n              :key=\"i\"\r\n              v-bind:comment=\"post.comments[i]\"\r\n              v-bind:user=\"this.user\"\r\n              v-on:delete-comment=\"onDeleteComment\"\r\n              v-on:update-comment=\"onUpdateComment\"\r\n            />\r\n          </div>\r\n          <div class=\"comment_form\">\r\n            <img\r\n              class=\"userpic comment_form__userPic\"\r\n              v-bind:src=\"`${user.profilePic}`\"\r\n              alt=\"Utilisateur {{post.user.prenom}} {{post.user.nom}}\"\r\n            />\r\n            <form>\r\n              <input\r\n                v-model=\"commentText\"\r\n                type=\"text\"\r\n                placeholder=\"Commenter la publication\"\r\n              />\r\n              <button @click.prevent=\"onAddComment\" class=\"btn\">\r\n                Commenter\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport config from \"../../axios-config\";\r\nimport postComment from \"@/components/posts/PostComment.vue\";\r\n\r\nexport default {\r\n  name: \"postBox\",\r\n  props: [\"post\", \"user\"],\r\n  components: {\r\n    postComment,\r\n  },\r\n  data() {\r\n    return {\r\n      formattedTimestamp: \"00/00/00 00:00\",\r\n      commentText: \"\", //TODO make sure it's not empty\r\n      isUserPost: false,\r\n      isEditMode: false,\r\n      comments: [],\r\n\r\n      //Post edit\r\n      postTextEdit: \"\",\r\n      postFileEdit: null,\r\n    };\r\n  },\r\n  methods: {\r\n    onUpdateComment(data) {\r\n      const commentData = {\r\n        id: data.id,\r\n        text: data.text,\r\n      };\r\n      axios\r\n        .put(\r\n          \"http://localhost:8000/api/post/updatecomment/\",\r\n          commentData,\r\n          config\r\n        )\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            const selComment = this.comments.find(\r\n              (comment) => comment.id == data.id\r\n            );\r\n            selComment.text = data.text;\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    onDeleteComment(commentId) {\r\n      axios\r\n        .delete(\r\n          \"http://localhost:8000/api/post/deletecomment/\" + commentId,\r\n          config\r\n        )\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            console.log(\"Deleted comment\");\r\n            const selComment = this.comments.find(\r\n              (comment) => comment.id == commentId\r\n            );\r\n            this.comments.splice(this.comments.indexOf(selComment), 1);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    onUploadImage(e) {\r\n      this.postFileEdit = e.target.files[0];\r\n    },\r\n    onDeletePost() {\r\n      this.$emit(\"delete-post\", this.post.id);\r\n    },\r\n    onDeletePostImage() {\r\n      axios\r\n        .post(\r\n          \"http://localhost:8000/api/post/removepostimage\",\r\n          { id: this.post.id },\r\n          config\r\n        )\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            this.$emit(\"edit-post-values\", response.data);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    onEditPost() {\r\n      const formData = new FormData();\r\n      formData.append(\"id\", this.post.id);\r\n      formData.append(\"text\", this.postTextEdit);\r\n\r\n      if (this.postFileEdit != null) {\r\n        formData.append(\"image\", this.postFileEdit, this.postFileEdit.name);\r\n      }\r\n\r\n      axios\r\n        .put(\"http://localhost:8000/api/post/updatepost\", formData, config)\r\n        .then((response) => {\r\n          if (response.status == 200) {\r\n            this.postTextEdit = \"\";\r\n            this.postFileEdit = null;\r\n            this.isEditMode = false;\r\n            this.$emit(\"edit-post-values\", response.data);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n    onEditMode() {\r\n      this.postTextEdit = this.post.text;\r\n      this.isEditMode = !this.isEditMode;\r\n    },\r\n    onAddComment() {\r\n      const commentObj = {\r\n        id: this.post.id,\r\n        text: this.commentText,\r\n      };\r\n\r\n      axios\r\n        .post(\r\n          \"http://localhost:8000/api/post/createcomment\",\r\n          commentObj,\r\n          config\r\n        )\r\n        .then((response) => {\r\n          if (response.status == 201) {\r\n            const commentInfo = {\r\n              postId: this.post.id,\r\n              comment: response.data,\r\n            };\r\n\r\n            this.commentText = \"\";\r\n            this.$emit(\"added-comment\", commentInfo);\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    },\r\n  },\r\n  created() {\r\n    console.log(this.post);\r\n    this.comments = this.post.comments;\r\n    this.isUserPost = this.post.userId == this.user.id || this.user.isAdmin;\r\n\r\n    if (this.post.timestamp != null && this.post.timestamp != \"\") {\r\n      const values = this.post.timestamp.split(\"T\");\r\n      const date = values[0].split(\"-\");\r\n      const time = values[1].split(\":\");\r\n      this.formattedTimestamp = `${date[2]}/${date[1]}/${date[0]} Ã  ${time[0]}h${time[1]}`;\r\n    }\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import postBox from \"@/components/posts/PostBox.vue\";\nimport axios from \"axios\";\nimport config from \"../axios-config\";\nexport default {\n  name: \"HomeView\",\n  props: [\"user\"],\n  components: {\n    postBox\n  },\n\n  data() {\n    return {\n      noPost: false,\n      posts: [],\n      postText: \"\",\n      postFile: null\n    };\n  },\n\n  methods: {\n    onAddedComment(info) {\n      //Get new comment\n      info.comment.user = this.user; //Format new timestamp\n\n      const date = new Date(Date.now());\n      const formattedTimeStamp = `${date.getFullYear()}-${date.getMonth()}-${date.getDay()}T${date.getHours()}:${date.getMinutes()}`;\n      info.comment.timestamp = formattedTimeStamp;\n      console.log(info.comment.timestamp);\n      const commentPost = this.posts.find(post => post.id == info.postId);\n      commentPost.comments.push(info.comment);\n    },\n\n    onUploadImage(e) {\n      this.postFile = e.target.files[0];\n    },\n\n    onPublishPost() {\n      const formData = new FormData();\n      formData.append(\"text\", this.postText);\n\n      if (this.postFile != null) {\n        formData.append(\"image\", this.postFile, this.postFile.name);\n      }\n\n      axios.post(\"http://localhost:8000/api/post/createpost\", formData, config).then(response => {\n        if (response.status == 201) {\n          this.$router.go();\n        }\n      }).catch(err => console.log(err));\n    }\n\n  },\n\n  created() {\n    //Vérification d'une connection existante avec le serveur\n    axios.get(\"http://localhost:8000/api/auth/isloggedin\", config).then(response => {\n      if (response.data.message == 0) {\n        //Déconnecté, redirection\n        this.$router.push(\"auth\");\n      }\n    }); //Obtention des posts\n\n    axios.get(\"http://localhost:8000/api/post/getallposts\", config).then(response => {\n      const posts = response.data;\n\n      if (posts) {\n        this.posts = posts.reverse();\n      } else {\n        this.noPost = true;\n      }\n    });\n  }\n\n};","map":{"version":3,"mappings":"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","names":["postBox","axios","config","name","props","components","data","noPost","posts","postText","postFile","methods","onAddedComment","info","comment","user","date","Date","now","formattedTimeStamp","getFullYear","getMonth","getDay","getHours","getMinutes","timestamp","console","log","commentPost","find","post","id","postId","comments","push","onUploadImage","e","target","files","onPublishPost","formData","FormData","append","then","response","status","$router","go","catch","err","created","get","message","reverse"],"sourceRoot":"","sources":["C:\\Users\\Wilfre\\Desktop\\OC P7\\front-end\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div id=\"home\">\n    <h2>Publications des autres membres</h2>\n    <div class=\"post_container\">\n      <div class=\"newpost\">\n        <img\n          v-if=\"this.user.profilePic\"\n          class=\"userpic newpost__userPic\"\n          v-bind:src=\"`${this.user.profilePic}`\"\n          alt=\"Utilisateur {{this.user.prenom}} {{this.user.nom}}\"\n        />\n        <form v-on:submit.prevent=\"onPublishPost\" enctype=\"multipart/form-data\">\n          <textarea v-model=\"postText\" placeholder=\"Nouvelle publication\" />\n          <input @change=\"onUploadImage\" type=\"file\" accept=\".jpg,.jpeg,.png\" />\n          <button class=\"btn\">Publier</button>\n        </form>\n      </div>\n      <postBox\n        v-on:added-comment=\"onAddedComment\"\n        v-for=\"(post, i) in posts\"\n        :key=\"i\"\n        v-bind:post=\"posts[i]\"\n      />\n    </div>\n    <div v-if=\"noPost\">\n      <h1>No post</h1>\n    </div>\n  </div>\n</template>\n\n<script>\nimport postBox from \"@/components/posts/PostBox.vue\";\nimport axios from \"axios\";\nimport config from \"../axios-config\";\n\nexport default {\n  name: \"HomeView\",\n  props: [\"user\"],\n  components: {\n    postBox,\n  },\n  data() {\n    return {\n      noPost: false,\n      posts: [],\n      postText: \"\",\n      postFile: null,\n    };\n  },\n  methods: {\n    onAddedComment(info) {\n      //Get new comment\n      info.comment.user = this.user;\n\n      //Format new timestamp\n      const date = new Date(Date.now());\n      const formattedTimeStamp = `${date.getFullYear()}-${date.getMonth()}-${date.getDay()}T${date.getHours()}:${date.getMinutes()}`;\n      info.comment.timestamp = formattedTimeStamp;\n\n      console.log(info.comment.timestamp);\n      const commentPost = this.posts.find((post) => post.id == info.postId);\n      commentPost.comments.push(info.comment);\n    },\n    onUploadImage(e) {\n      this.postFile = e.target.files[0];\n    },\n    onPublishPost() {\n      const formData = new FormData();\n      formData.append(\"text\", this.postText);\n\n      if (this.postFile != null) {\n        formData.append(\"image\", this.postFile, this.postFile.name);\n      }\n\n      axios\n        .post(\"http://localhost:8000/api/post/createpost\", formData, config)\n        .then((response) => {\n          if (response.status == 201) {\n            this.$router.go();\n          }\n        })\n        .catch((err) => console.log(err));\n    },\n  },\n  created() {\n    //Vérification d'une connection existante avec le serveur\n    axios\n      .get(\"http://localhost:8000/api/auth/isloggedin\", config)\n      .then((response) => {\n        if (response.data.message == 0) {\n          //Déconnecté, redirection\n          this.$router.push(\"auth\");\n        }\n      });\n\n    //Obtention des posts\n    axios\n      .get(\"http://localhost:8000/api/post/getallposts\", config)\n      .then((response) => {\n        const posts = response.data;\n\n        if (posts) {\n          this.posts = posts.reverse();\n        } else {\n          this.noPost = true;\n        }\n      });\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}
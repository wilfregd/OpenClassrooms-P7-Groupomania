{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"home\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Publications des autres membres\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"post_container\"\n};\nconst _hoisted_4 = {\n  class: \"newpost\"\n};\nconst _hoisted_5 = [\"src\"];\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn\"\n}, \"Publier\", -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = {\n  key: 0\n};\n\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"No post\", -1\n/* HOISTED */\n);\n\nconst _hoisted_9 = [_hoisted_8];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_postBox = _resolveComponent(\"postBox\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [this.user.profilePic ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    class: \"userpic newpost__userPic\",\n    src: `${this.user.profilePic}`,\n    alt: \"Utilisateur {{this.user.prenom}} {{this.user.nom}}\"\n  }, null, 8\n  /* PROPS */\n  , _hoisted_5)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.onPublishPost && $options.onPublishPost(...args), [\"prevent\"])),\n    enctype: \"multipart/form-data\"\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.postText = $event),\n    placeholder: \"Nouvelle publication\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.postText]]), _createElementVNode(\"input\", {\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.onUploadImage && $options.onUploadImage(...args)),\n    type: \"file\",\n    accept: \".jpg,.jpeg,.png\"\n  }, null, 32\n  /* HYDRATE_EVENTS */\n  ), _hoisted_6], 32\n  /* HYDRATE_EVENTS */\n  )]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, (post, i) => {\n    return _openBlock(), _createBlock(_component_postBox, {\n      onAddedComment: $options.onAddedComment,\n      key: i,\n      post: $data.posts[i]\n    }, null, 8\n    /* PROPS */\n    , [\"onAddedComment\", \"post\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), $data.noPost ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _hoisted_9)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,EAAE,EAAC;;;gCACNC,oBAAwC,IAAxC,EAAwC,IAAxC,EAAI,iCAAJ,EAAmC;AAAA;AAAnC;;;EACKC,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;gCAUPD,oBAAoC,QAApC,EAAoC;EAA5BC,KAAK,EAAC;AAAsB,CAApC,EAAoB,SAApB,EAA2B;AAAA;AAA3B;;;;;;gCAWJD,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,EAAW;AAAA;AAAX;;oBAAAE;;;;uBAxBJC,oBA0BM,KA1BN,cA0BM,CAzBJC,UAyBI,EAxBJJ,oBAoBM,KApBN,cAoBM,CAnBJA,oBAYM,KAZN,cAYM,MAVSK,KAAKC,4BADlBH,oBAKE,KALF,EAKE;UAAA;IAHAF,KAAK,EAAC,0BAGN;IAFOM,GAAG,UAAUF,IAAV,CAAeC,UAAU,EAEnC;IADAE,GAAG,EAAC;EACJ,CALF;;EAAA,kDAWI,EALJR,oBAIO,MAJP,EAIO;IAJIS,QAAM,wDAAUC,yDAAV,EAAuB,WAAvB,EAIV;IAJmCC,OAAO,EAAC;EAI3C,CAJP,mBACEX,oBAAkE,UAAlE,EAAkE;+DAA/CY,iBAAQC,OAAuC;IAArCC,WAAW,EAAC;EAAyB,CAAlE;;EAAA,kBAAmBF,mBACnBZ,oBAAsE,OAAtE,EAAsE;IAA9De,QAAM,yCAAEL,yDAAF,CAAwD;IAAvCM,IAAI,EAAC,MAAkC;IAA3BC,MAAM,EAAC;EAAoB,CAAtE;;EAAA,GACAC,WAHF;;EAAA,CAKI,CAZN,CAmBI,qBANJf,oBAKEgB,SALF,EAKE,IALF,EAKEC,YAHoBR,WAGpB,EAHyB,CAAjBS,IAAiB,EAAXC,CAAW,KAAV;yBAFjBC,aAKEC,kBALF,EAKE;MAJKC,cAAa,EAAEf,uBAIpB;MAFCgB,GAAG,EAAEJ,CAEN;MADOD,IAAI,EAAET,YAAMU,CAAN;IACb,CALF;;IAAA;GAKE,CALF;;EAAA,CAMI,EApBN,CAwBI,EAHOV,8BAAXT,oBAEM,KAFN,EAEMwB,UAFN,EAEMC,UAFN,sCAGI,CA1BN","names":["id","_createElementVNode","class","_hoisted_8","_createElementBlock","_hoisted_2","user","profilePic","src","alt","onSubmit","$options","enctype","$data","$event","placeholder","onChange","type","accept","_hoisted_6","_Fragment","_renderList","post","i","_createBlock","_component_postBox","onAddedComment","key","_hoisted_7","_hoisted_9"],"sourceRoot":"","sources":["C:\\Users\\Wilfre\\Desktop\\OC P7\\front-end\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n  <div id=\"home\">\n    <h2>Publications des autres membres</h2>\n    <div class=\"post_container\">\n      <div class=\"newpost\">\n        <img\n          v-if=\"this.user.profilePic\"\n          class=\"userpic newpost__userPic\"\n          v-bind:src=\"`${this.user.profilePic}`\"\n          alt=\"Utilisateur {{this.user.prenom}} {{this.user.nom}}\"\n        />\n        <form v-on:submit.prevent=\"onPublishPost\" enctype=\"multipart/form-data\">\n          <textarea v-model=\"postText\" placeholder=\"Nouvelle publication\" />\n          <input @change=\"onUploadImage\" type=\"file\" accept=\".jpg,.jpeg,.png\" />\n          <button class=\"btn\">Publier</button>\n        </form>\n      </div>\n      <postBox\n        v-on:added-comment=\"onAddedComment\"\n        v-for=\"(post, i) in posts\"\n        :key=\"i\"\n        v-bind:post=\"posts[i]\"\n      />\n    </div>\n    <div v-if=\"noPost\">\n      <h1>No post</h1>\n    </div>\n  </div>\n</template>\n\n<script>\nimport postBox from \"@/components/posts/PostBox.vue\";\nimport axios from \"axios\";\nimport config from \"../axios-config\";\n\nexport default {\n  name: \"HomeView\",\n  props: [\"user\"],\n  components: {\n    postBox,\n  },\n  data() {\n    return {\n      noPost: false,\n      posts: [],\n      postText: \"\",\n      postFile: null,\n    };\n  },\n  methods: {\n    onAddedComment(info) {\n      //Get new comment\n      console.log(info);\n\n      this.posts[info.postId].comments.push(info.comment);\n    },\n    onUploadImage(e) {\n      this.postFile = e.target.files[0];\n    },\n    onPublishPost() {\n      const formData = new FormData();\n      formData.append(\"text\", this.postText);\n\n      if (this.postFile != null) {\n        formData.append(\"image\", this.postFile, this.postFile.name);\n      }\n\n      axios\n        .post(\"http://localhost:8000/api/post/createpost\", formData, config)\n        .then((response) => {\n          if (response.status == 201) {\n            this.$router.go();\n          }\n        })\n        .catch((err) => console.log(err));\n    },\n  },\n  created() {\n    //Vérification d'une connection existante avec le serveur\n    axios\n      .get(\"http://localhost:8000/api/auth/isloggedin\", config)\n      .then((response) => {\n        if (response.data.message == 0) {\n          //Déconnecté, redirection\n          this.$router.push(\"auth\");\n        }\n      });\n\n    //Obtention des posts\n    axios\n      .get(\"http://localhost:8000/api/post/getallposts\", config)\n      .then((response) => {\n        const posts = response.data;\n\n        if (posts) {\n          this.posts = posts.reverse();\n          this.posts.forEach((post) => {\n            post.comments = post.comments.reverse();\n          });\n        } else {\n          this.noPost = true;\n        }\n      });\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}